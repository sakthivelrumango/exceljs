{"version":3,"sources":["../../../lib/csv/csv.js"],"names":["fs","require","fastCsv","dayjs","StreamBuf","exists","SpecialValues","error","CSV","workbook","worksheet","filename","options","Error","stream","createReadStream","read","close","Promise","resolve","reject","csvStream","createInputStream","on","pipe","addWorksheet","sheetName","dateFormats","ISO_8601","map","datum","datumNumber","Number","isNaN","Infinity","dt","isValid","Date","valueOf","special","undefined","parse","data","addRow","emit","getWorksheet","sheetId","format","dateFormat","dateUTC","value","text","hyperlink","formula","result","utc","JSON","stringify","includeEmptyRows","lastRow","eachRow","row","rowNumber","write","values","shift","end","streamOptions","encoding","createWriteStream","module","exports"],"mappings":";;;;;;;;;;;;;;AAAA,IAAMA,EAAE,GAAGC,OAAO,CAAC,IAAD,CAAlB;;AACA,IAAMC,OAAO,GAAGD,OAAO,CAAC,UAAD,CAAvB;;AACA,IAAME,KAAK,GAAGF,OAAO,CAAC,OAAD,CAArB;;AACA,IAAMG,SAAS,GAAGH,OAAO,CAAC,qBAAD,CAAzB;;eAEuBA,OAAO,CAAC,gBAAD,C;IAAlBI,M,YAALL,E,CAAKK,M;AAEZ;;;AACA,IAAMC,aAAa,GAAG;AACpB,UAAM,IADc;AAEpB,WAAO,KAFa;AAGpB,UAAQ;AAACC,IAAAA,KAAK,EAAE;AAAR,GAHY;AAIpB,WAAS;AAACA,IAAAA,KAAK,EAAE;AAAR,GAJW;AAKpB,YAAU;AAACA,IAAAA,KAAK,EAAE;AAAR,GALU;AAMpB,aAAW;AAACA,IAAAA,KAAK,EAAE;AAAR,GANS;AAOpB,YAAU;AAACA,IAAAA,KAAK,EAAE;AAAR,GAPU;AAQpB,aAAW;AAACA,IAAAA,KAAK,EAAE;AAAR,GARS;AASpB,WAAS;AAACA,IAAAA,KAAK,EAAE;AAAR;AATW,CAAtB;AAWA;;IAEMC,G;;;AACJ,eAAYC,QAAZ,EAAsB;AAAA;;AACpB,SAAKA,QAAL,GAAgBA,QAAhB;AACA,SAAKC,SAAL,GAAiB,IAAjB;AACD;;;;;;;+CAEcC,Q,EAAUC,O;;;;;;AACvBA,gBAAAA,OAAO,GAAGA,OAAO,IAAI,EAArB;;uBACYP,MAAM,CAACM,QAAD,C;;;;;;;;sBACV,IAAIE,KAAJ,2BAA6BF,QAA7B,E;;;AAEFG,gBAAAA,M,GAASd,EAAE,CAACe,gBAAH,CAAoBJ,QAApB,C;;uBACS,KAAKK,IAAL,CAAUF,MAAV,EAAkBF,OAAlB,C;;;AAAlBF,gBAAAA,S;AACNI,gBAAAA,MAAM,CAACG,KAAP;iDACOP,S;;;;;;;;;;;;;;;;;;yBAGJI,M,EAAQF,O,EAAS;AAAA;;AACpBA,MAAAA,OAAO,GAAGA,OAAO,IAAI,EAArB;AACA,aAAO,IAAIM,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtC,YAAMC,SAAS,GAAG,KAAI,CAACC,iBAAL,CAAuBV,OAAvB,EACfW,EADe,CACZ,WADY,EACCJ,OADD,EAEfI,EAFe,CAEZ,OAFY,EAEHH,MAFG,CAAlB;;AAIAN,QAAAA,MAAM,CAACU,IAAP,CAAYH,SAAZ;AACD,OANM,CAAP;AAOD;;;sCAEiBT,O,EAAS;AACzBA,MAAAA,OAAO,GAAGA,OAAO,IAAI,EAArB;AACA,UAAMF,SAAS,GAAG,KAAKD,QAAL,CAAcgB,YAAd,CAA2Bb,OAAO,CAACc,SAAnC,CAAlB;AAEA,UAAMC,WAAW,GAAGf,OAAO,CAACe,WAAR,IAAuB,CAACxB,KAAK,CAACyB,QAAP,EAAiB,YAAjB,EAA+B,YAA/B,CAA3C;;AACA,UAAMC,GAAG,GACPjB,OAAO,CAACiB,GAAR,IACA,UAASC,KAAT,EAAgB;AACd,YAAIA,KAAK,KAAK,EAAd,EAAkB;AAChB,iBAAO,IAAP;AACD;;AACD,YAAMC,WAAW,GAAGC,MAAM,CAACF,KAAD,CAA1B;;AACA,YAAI,CAACE,MAAM,CAACC,KAAP,CAAaF,WAAb,CAAD,IAA8BA,WAAW,KAAKG,QAAlD,EAA4D;AAC1D,iBAAOH,WAAP;AACD;;AACD,YAAMI,EAAE,GAAGhC,KAAK,CAAC2B,KAAD,EAAQH,WAAR,EAAqB,IAArB,CAAhB;;AACA,YAAIQ,EAAE,CAACC,OAAH,EAAJ,EAAkB;AAChB,iBAAO,IAAIC,IAAJ,CAASF,EAAE,CAACG,OAAH,EAAT,CAAP;AACD;;AACD,YAAMC,OAAO,GAAGjC,aAAa,CAACwB,KAAD,CAA7B;;AACA,YAAIS,OAAO,KAAKC,SAAhB,EAA2B;AACzB,iBAAOD,OAAP;AACD;;AACD,eAAOT,KAAP;AACD,OAnBH;;AAqBA,UAAMT,SAAS,GAAGnB,OAAO,CAACuC,KAAR,CAAc7B,OAAd,EACfW,EADe,CACZ,MADY,EACJ,UAAAmB,IAAI,EAAI;AAClBhC,QAAAA,SAAS,CAACiC,MAAV,CAAiBD,IAAI,CAACb,GAAL,CAASA,GAAT,CAAjB;AACD,OAHe,EAIfN,EAJe,CAIZ,KAJY,EAIL,YAAM;AACfF,QAAAA,SAAS,CAACuB,IAAV,CAAe,WAAf,EAA4BlC,SAA5B;AACD,OANe,CAAlB;AAOA,aAAOW,SAAP;AACD;;;0BAEKP,M,EAAQF,O,EAAS;AAAA;;AACrB,aAAO,IAAIM,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtCR,QAAAA,OAAO,GAAGA,OAAO,IAAI,EAArB,CADsC,CAEtC;AACA;AACA;;AAEA,YAAMF,SAAS,GAAG,MAAI,CAACD,QAAL,CAAcoC,YAAd,CAA2BjC,OAAO,CAACc,SAAR,IAAqBd,OAAO,CAACkC,OAAxD,CAAlB;;AAEA,YAAMzB,SAAS,GAAGnB,OAAO,CAAC6C,MAAR,CAAenC,OAAf,CAAlB;AACAE,QAAAA,MAAM,CAACS,EAAP,CAAU,QAAV,EAAoB,YAAM;AACxBJ,UAAAA,OAAO;AACR,SAFD;AAGAE,QAAAA,SAAS,CAACE,EAAV,CAAa,OAAb,EAAsBH,MAAtB;AACAC,QAAAA,SAAS,CAACG,IAAV,CAAeV,MAAf;AAbsC,uBAeRF,OAfQ;AAAA,YAe/BoC,UAf+B,YAe/BA,UAf+B;AAAA,YAenBC,OAfmB,YAenBA,OAfmB;;AAgBtC,YAAMpB,GAAG,GACPjB,OAAO,CAACiB,GAAR,IACC,UAAAqB,KAAK,EAAI;AACR,cAAIA,KAAJ,EAAW;AACT,gBAAIA,KAAK,CAACC,IAAN,IAAcD,KAAK,CAACE,SAAxB,EAAmC;AACjC,qBAAOF,KAAK,CAACE,SAAN,IAAmBF,KAAK,CAACC,IAAzB,IAAiC,EAAxC;AACD;;AACD,gBAAID,KAAK,CAACG,OAAN,IAAiBH,KAAK,CAACI,MAA3B,EAAmC;AACjC,qBAAOJ,KAAK,CAACI,MAAN,IAAgB,EAAvB;AACD;;AACD,gBAAIJ,KAAK,YAAYb,IAArB,EAA2B;AACzB,kBAAIW,UAAJ,EAAgB;AACd,uBAAOC,OAAO,GAAG9C,KAAK,CAACoD,GAAN,CAAUL,KAAV,EAAiBH,MAAjB,CAAwBC,UAAxB,CAAH,GAAyC7C,KAAK,CAAC+C,KAAD,CAAL,CAAaH,MAAb,CAAoBC,UAApB,CAAvD;AACD;;AACD,qBAAOC,OAAO,GAAG9C,KAAK,CAACoD,GAAN,CAAUL,KAAV,EAAiBH,MAAjB,EAAH,GAA+B5C,KAAK,CAAC+C,KAAD,CAAL,CAAaH,MAAb,EAA7C;AACD;;AACD,gBAAIG,KAAK,CAAC3C,KAAV,EAAiB;AACf,qBAAO2C,KAAK,CAAC3C,KAAb;AACD;;AACD,gBAAI,QAAO2C,KAAP,MAAiB,QAArB,EAA+B;AAC7B,qBAAOM,IAAI,CAACC,SAAL,CAAeP,KAAf,CAAP;AACD;AACF;;AACD,iBAAOA,KAAP;AACD,SAxBH;;AA0BA,YAAMQ,gBAAgB,GAAG9C,OAAO,CAAC8C,gBAAR,KAA6BlB,SAA7B,IAA0C5B,OAAO,CAAC8C,gBAA3E;AACA,YAAIC,OAAO,GAAG,CAAd;;AACA,YAAIjD,SAAJ,EAAe;AACbA,UAAAA,SAAS,CAACkD,OAAV,CAAkB,UAACC,GAAD,EAAMC,SAAN,EAAoB;AACpC,gBAAIJ,gBAAJ,EAAsB;AACpB,qBAAOC,OAAO,KAAKG,SAAS,GAAG,CAA/B,EAAkC;AAChCzC,gBAAAA,SAAS,CAAC0C,KAAV,CAAgB,EAAhB;AACD;AACF;;AALmC,gBAM7BC,MAN6B,GAMnBH,GANmB,CAM7BG,MAN6B;AAOpCA,YAAAA,MAAM,CAACC,KAAP;AACA5C,YAAAA,SAAS,CAAC0C,KAAV,CAAgBC,MAAM,CAACnC,GAAP,CAAWA,GAAX,CAAhB;AACA8B,YAAAA,OAAO,GAAGG,SAAV;AACD,WAVD;AAWD;;AACDzC,QAAAA,SAAS,CAAC6C,GAAV;AACD,OA1DM,CAAP;AA2DD;;;8BAESvD,Q,EAAUC,O,EAAS;AAC3BA,MAAAA,OAAO,GAAGA,OAAO,IAAI,EAArB;AAEA,UAAMuD,aAAa,GAAG;AACpBC,QAAAA,QAAQ,EAAExD,OAAO,CAACwD,QAAR,IAAoB;AADV,OAAtB;AAGA,UAAMtD,MAAM,GAAGd,EAAE,CAACqE,iBAAH,CAAqB1D,QAArB,EAA+BwD,aAA/B,CAAf;AAEA,aAAO,KAAKJ,KAAL,CAAWjD,MAAX,EAAmBF,OAAnB,CAAP;AACD;;;;;;gDAEiBA,O;;;;;;AACVE,gBAAAA,M,GAAS,IAAIV,SAAJ,E;;uBACT,KAAK2D,KAAL,CAAWjD,MAAX,EAAmBF,OAAnB,C;;;kDACCE,MAAM,CAACE,IAAP,E;;;;;;;;;;;;;;;;;;;;;AAIXsD,MAAM,CAACC,OAAP,GAAiB/D,GAAjB","sourcesContent":["const fs = require('fs');\nconst fastCsv = require('fast-csv');\nconst dayjs = require('dayjs');\nconst StreamBuf = require('../utils/stream-buf');\n\nconst {fs: {exists}} = require('../utils/utils');\n\n/* eslint-disable quote-props */\nconst SpecialValues = {\n  true: true,\n  false: false,\n  '#N/A': {error: '#N/A'},\n  '#REF!': {error: '#REF!'},\n  '#NAME?': {error: '#NAME?'},\n  '#DIV/0!': {error: '#DIV/0!'},\n  '#NULL!': {error: '#NULL!'},\n  '#VALUE!': {error: '#VALUE!'},\n  '#NUM!': {error: '#NUM!'},\n};\n/* eslint-ensable quote-props */\n\nclass CSV {\n  constructor(workbook) {\n    this.workbook = workbook;\n    this.worksheet = null;\n  }\n\n  async readFile(filename, options) {\n    options = options || {};\n    if (!(await exists(filename))) {\n      throw new Error(`File not found: ${filename}`);\n    }\n    const stream = fs.createReadStream(filename);\n    const worksheet = await this.read(stream, options);\n    stream.close();\n    return worksheet;\n  }\n\n  read(stream, options) {\n    options = options || {};\n    return new Promise((resolve, reject) => {\n      const csvStream = this.createInputStream(options)\n        .on('worksheet', resolve)\n        .on('error', reject);\n\n      stream.pipe(csvStream);\n    });\n  }\n\n  createInputStream(options) {\n    options = options || {};\n    const worksheet = this.workbook.addWorksheet(options.sheetName);\n\n    const dateFormats = options.dateFormats || [dayjs.ISO_8601, 'MM-DD-YYYY', 'YYYY-MM-DD'];\n    const map =\n      options.map ||\n      function(datum) {\n        if (datum === '') {\n          return null;\n        }\n        const datumNumber = Number(datum);\n        if (!Number.isNaN(datumNumber) && datumNumber !== Infinity) {\n          return datumNumber;\n        }\n        const dt = dayjs(datum, dateFormats, true);\n        if (dt.isValid()) {\n          return new Date(dt.valueOf());\n        }\n        const special = SpecialValues[datum];\n        if (special !== undefined) {\n          return special;\n        }\n        return datum;\n      };\n\n    const csvStream = fastCsv.parse(options)\n      .on('data', data => {\n        worksheet.addRow(data.map(map));\n      })\n      .on('end', () => {\n        csvStream.emit('worksheet', worksheet);\n      });\n    return csvStream;\n  }\n\n  write(stream, options) {\n    return new Promise((resolve, reject) => {\n      options = options || {};\n      // const encoding = options.encoding || 'utf8';\n      // const separator = options.separator || ',';\n      // const quoteChar = options.quoteChar || '\\'';\n\n      const worksheet = this.workbook.getWorksheet(options.sheetName || options.sheetId);\n\n      const csvStream = fastCsv.format(options);\n      stream.on('finish', () => {\n        resolve();\n      });\n      csvStream.on('error', reject);\n      csvStream.pipe(stream);\n\n      const {dateFormat, dateUTC} = options;\n      const map =\n        options.map ||\n        (value => {\n          if (value) {\n            if (value.text || value.hyperlink) {\n              return value.hyperlink || value.text || '';\n            }\n            if (value.formula || value.result) {\n              return value.result || '';\n            }\n            if (value instanceof Date) {\n              if (dateFormat) {\n                return dateUTC ? dayjs.utc(value).format(dateFormat) : dayjs(value).format(dateFormat);\n              }\n              return dateUTC ? dayjs.utc(value).format() : dayjs(value).format();\n            }\n            if (value.error) {\n              return value.error;\n            }\n            if (typeof value === 'object') {\n              return JSON.stringify(value);\n            }\n          }\n          return value;\n        });\n\n      const includeEmptyRows = options.includeEmptyRows === undefined || options.includeEmptyRows;\n      let lastRow = 1;\n      if (worksheet) {\n        worksheet.eachRow((row, rowNumber) => {\n          if (includeEmptyRows) {\n            while (lastRow++ < rowNumber - 1) {\n              csvStream.write([]);\n            }\n          }\n          const {values} = row;\n          values.shift();\n          csvStream.write(values.map(map));\n          lastRow = rowNumber;\n        });\n      }\n      csvStream.end();\n    });\n  }\n\n  writeFile(filename, options) {\n    options = options || {};\n\n    const streamOptions = {\n      encoding: options.encoding || 'utf8',\n    };\n    const stream = fs.createWriteStream(filename, streamOptions);\n\n    return this.write(stream, options);\n  }\n\n  async writeBuffer(options) {\n    const stream = new StreamBuf();\n    await this.write(stream, options);\n    return stream.read();\n  }\n}\n\nmodule.exports = CSV;\n"],"file":"csv.js"}